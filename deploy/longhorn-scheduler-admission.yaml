---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: longhorn-scheduler-admission
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: longhorn-scheduler-admission
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: longhorn-scheduler-admission
subjects:
  - kind: ServiceAccount
    name: longhorn-scheduler-admission
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: longhorn-scheduler-admission
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: longhorn-scheduler-admission
subjects:
  - kind: ServiceAccount
    name: longhorn-scheduler-admission
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: longhorn-scheduler-admission
  namespace: kube-system
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "create"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: longhorn-scheduler-admission
rules:
  - apiGroups: [""]
    resources: ["pods", "persistentvolumeclaims", "persistentvolumes"]
    verbs: ["get"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations"]
    verbs: ["get", "update"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: longhorn-scheduler-admission-create
  namespace: kube-system
spec:
  template:
    metadata:
      name: longhorn-scheduler-admission-create
    spec:
      containers:
        - args:
            - create
            - --host=longhorn-scheduler-admission,longhorn-scheduler-admission.$(POD_NAMESPACE).svc
            - --namespace=$(POD_NAMESPACE)
            - --secret-name=longhorn-scheduler-admission
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343
          imagePullPolicy: IfNotPresent
          name: create
          securityContext:
            allowPrivilegeEscalation: false
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: longhorn-scheduler-admission
---
apiVersion: batch/v1
kind: Job
metadata:
  name: longhorn-scheduler-admission-patch
  namespace: kube-system
spec:
  template:
    metadata:
      name: longhorn-scheduler-admission-patch
    spec:
      containers:
        - args:
            - patch
            - --webhook-name=longhorn-scheduler-admission
            - --namespace=$(POD_NAMESPACE)
            - --patch-validating=false
            - --patch-mutating=true
            - --secret-name=longhorn-scheduler-admission
            - --patch-failure-policy=Ignore
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20220916-gd32f8c343
          imagePullPolicy: IfNotPresent
          name: create
          securityContext:
            allowPrivilegeEscalation: false
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccountName: longhorn-scheduler-admission
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: longhorn-scheduler-admission
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: longhorn-scheduler-admission
  template:
    metadata:
      labels:
        app.kubernetes.io/name: longhorn-scheduler-admission
    spec:
      containers:
        - name: longhorn-scheduler-admission
          image: blampe/longhorn-scheduler:0.0.1
          imagePullPolicy: IfNotPresent
          command: ["/longhorn-scheduler-admission"]
          args:
            - -scheduler=longhorn
            - -tls-cert-file=/usr/local/certificates/cert
            - -tls-key-file=/usr/local/certificates/key
          volumeMounts:
            - mountPath: /usr/local/certificates/
              name: webhook-cert
              readOnly: true
      serviceAccountName: longhorn-scheduler-admission
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
        - name: webhook-cert
          secret:
            secretName: longhorn-scheduler-admission
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: longhorn-scheduler-admission
---
apiVersion: v1
kind: Service
metadata:
  name: longhorn-scheduler-admission
  namespace: kube-system
spec:
  selector:
    app.kubernetes.io/name: longhorn-scheduler-admission
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: longhorn-scheduler-admission
webhooks:
  - name: longhorn-scheduler-admission.linbit.com
    rules:
      - apiGroups: [""]
        apiVersions: ["v1"]
        operations: ["CREATE"]
        resources: ["pods"]
        scope: "*"
    clientConfig:
      service:
        namespace: kube-system
        name: longhorn-scheduler-admission
        path: "/mutate"
        port: 8080
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    failurePolicy: Ignore
